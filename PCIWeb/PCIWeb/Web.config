<?xml version="1.0"?>

<configuration>
	<appSettings>
		<add key="DBConnection" value="TestDB"/>
		<add key="LogFileErrors" value="C:\Temp\PCIError.txt"/>
		<add key="LogFileInfo" value="C:\Temp\PCIInfo.txt"/>
	</appSettings>

  <connectionStrings>
    <add name="TestDB" connectionString="server=PAUL-LAPTOP64\SQL2012;database=Prosperian;UID=sa;PWD=sa;Integrated Security=false" providerName="System.Data.SqlClient"/>
    <add name="LiveDB" connectionString="server=PAUL-LAPTOP64\SQL2012;database=Prosperian;UID=sa;PWD=sa;Integrated Security=false" providerName="System.Data.SqlClient"/>
  </connectionStrings>

  <system.web>
    <!--
            Set compilation debug="true" to insert debugging
            symbols into the compiled page. Because this
            affects performance, set this value to true only
            during development.
        -->
    <compilation debug="true" targetFramework="4.5.2"/>
    <!--
            The <authentication> section enables configuration
            of the security authentication mode used by
            ASP.NET to identify an incoming user.
        -->
    <authentication mode="Windows"/>
    <!--
            The <customErrors> section enables configuration
            of what to do if/when an unhandled error occurs
            during the execution of a request. Specifically,
            it enables developers to configure html error pages
            to be displayed in place of a error stack trace.

        <customErrors mode="RemoteOnly" defaultRedirect="GenericErrorPage.htm">
            <error statusCode="403" redirect="NoAccess.htm" />
            <error statusCode="404" redirect="FileNotFound.htm" />
        </customErrors>
        -->
    <!--
      <sessionState mode="InProc" cookieless="UseUri"></sessionState>
      -->
    <pages controlRenderingCompatibilityVersion="4.0" clientIDMode="AutoID"/>
  </system.web>
  <!--
        The system.webServer section is required for running ASP.NET AJAX under Internet
        Information Services 7.0.  It is not necessary for previous version of IIS.
    -->
  <system.webServer>
    <security>
      <requestFiltering>
        <requestLimits maxUrl="8192" maxQueryString="8192"/>
      </requestFiltering>
    </security>
  </system.webServer>
</configuration>